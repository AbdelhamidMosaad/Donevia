rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Match all collections for a specific user
    match /users/{userId}/{document=**} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Specific, stricter rule for Google Auth Tokens
    match /users/{userId}/googleAuthTokens/{tokenId} {
      allow read, write: if isAuthenticated() && isOwner(userId) && resource.data.userId == userId;
      // Deny list access to everyone to prevent leaking tokens
      allow list: if false;
    }
    
    // Rules for public data, if any
    match /publicDecks/{deckId} {
      allow get;
      allow list;
      allow write: if false; // Nobody can write directly to public decks
    }
  }
}
